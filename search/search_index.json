{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"M-Pipe: Automated report generation from relative abundance data","text":"<p>M-Pipe is a Snakemake workflow designed to automate exploratory analysis of relative abundance data obtained from 16S amplicon sequences. It complements our 16S processing workflow, which automates the processing of raw sequences. More details can be found here.  </p> <p>M-Pipe takes Qiime2 artifacts as input, ensuring seamless integration with pipelines utilizing Qiime2. It generates an HTML report containing key insights into the microbial species present in the samples.  </p> <p>The report provides: - An overview of the main microbial species in the samples and their compositional characteristics. - Associations between the target attribute (e.g., CRC) and host characteristics. - Differential abundance analysis and statistical comparisons among target groups. - Performance evaluation of a logistic regression model for predicting the target attribute.  </p>"},{"location":"dataset/","title":"16S Amplicon Sequence Reads","text":"<p>For this tutorial, we use 16S amplicon read sequences obtained from faecal sample from three patient groups:Healthy,Adenoma,CRC (Zackular et al., 2014). The authors investigated gut microbiome potential for predicting cases with colorectal cancer. They used 16S amplicon sequences for the analysis. You can read more about the study here. </p>"},{"location":"dataset/#data-files","title":"Data files","text":"<p>You can download the 16S amplicon sequence reads and metadata file from the following links.</p> <ul> <li>Raw Fastq Paired Reads</li> <li>Metadata</li> </ul>"},{"location":"dataset/#references","title":"References","text":"<ol> <li>Zackular, J. P., Rogers, M. A., Ruffin IV, M. T., &amp; Schloss, P. D. (2014). The human gut microbiome as a screening tool for colorectal cancer. Cancer prevention research, 7(11), 1112-1121.</li> </ol>"},{"location":"execution/","title":"Execution","text":"<p>This section guides you through running the workflow to generate useful visualization and a summary report using qiime2 artifacts from our upstream pipeline.</p>"},{"location":"execution/#clone-the-repository","title":"Clone the repository","text":"<p>Clone the GitHub repository to access the scripts and configuration files needed for the workflow: <pre><code>git clone https://github.com/pankajchejara23/M-pipe\n</code></pre></p>"},{"location":"execution/#create-processing-environment","title":"Create processing environment","text":"<p>Set up the required Conda environment using the environment file: <pre><code>conda env create -f environment.yml\nconda activate downstream_env\n</code></pre></p>"},{"location":"execution/#configure-snakemake-workflow","title":"Configure Snakemake workflow","text":"<p>The <code>config.yaml</code> file is preconfigured for this workflow. If needed, edit the file to customize parameters for your specific use case.</p>"},{"location":"execution/#execute","title":"Execute","text":"<p>Run the Snakemake workflow using the following command: <pre><code>Snakemake --cores 4 \n</code></pre></p>"},{"location":"setup/","title":"Setup","text":"<p>We start by setting up our machine with required tools and packages to get it ready for executing the workflow. We primarily need the following tools</p> <ul> <li>R</li> <li>Python</li> <li>Miniconda</li> <li>Snakemake</li> </ul> <p>To speed up the installation, we will use an <code>environment.yml</code> file exported from a conda environment that successfully executed the workflow. You can download the file from environment. </p> <p>You can create a new environment using the following command. </p> <pre><code>conda env create -f environment.yml\n</code></pre> <p>Note</p> <p>To execute this command you need to have either Miniconda or Anaconda installed on your system. </p>"},{"location":"workflow/alpha_plot/","title":"Alpha diversity plot","text":"<p>This step computes and generates a plot for various alpha diversity measures (depending on the configuration). The plot visualizes alpha diversity measures for each group present in the target attribute. </p> <p>A statistical test, comparing alpha diversity among target groups, is also performed and results are added to the plot.</p> <pre><code>##########################################################\n#           CREATE PHYLOSEQ OBJECT\n##########################################################\nrule create_phyloseq:\n    input:\n        table = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" + PROJ + \"-asv-table.qza\",\n        tree = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" + \"tree/\" + PROJ + \"-rooted-tree.qza\",\n        taxa = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" +  PROJ + \"-tax_sklearn.qza\",\n\n    output:\n        phyloseq = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-phyloseq.RDS\"\n\n    log:\n        SCRATCH + \"/\" + OUTPUTDIR + \"/report/log/\" + \"create_phyloseq.log\"\n\n    shell:\n        \"\"\"\n        Rscript --no-save --no-restore --verbose ./scripts/to_physeq.R -f {input.table} \\\n          -t {input.tree} -x {input.taxa} \\\n          -m {METADATA} -o {output.phyloseq} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre>"},{"location":"workflow/alpha_plot/#example-plot","title":"Example plot","text":"<p>This is an example of alpha plot generated for this step. We used here processed data from (Zackular et al., 2014).</p> <p></p>"},{"location":"workflow/alpha_plot/#references","title":"References","text":"<ol> <li>Zackular, J. P., Rogers, M. A., Ruffin IV, M. T., &amp; Schloss, P. D. (2014). The human gut microbiome as a screening tool for colorectal cancer. Cancer prevention research, 7(11), 1112-1121.</li> </ol>"},{"location":"workflow/ancom_bc/","title":"ANCOM-BC","text":"<p>ANCOM-BC is another differential analysis technique which uses a concept of sampling fraction for bias correction purpose (Lin &amp; Peddadda, 2020). Sampling fraction is a ratio of the expected absolute abundance of a taxon in a random sample to its absolute abundance in a unit volume of the ecosystem. The technique performs normalization while considering sampling fraction to avoid chances of errors.</p> <pre><code>##########################################################\n#          PERFORM DIFFERENTIAL ABUNDANCE ANALYSIS USING ANCOM-BC\n##########################################################\nrule diff_ancom:\n    input:\n        phyloseq = OUTPUTDIR + \"/\" + PROJ + \"-phyloseq.RDS\",\n    output:\n        *ancom_output_files,\n    log:\n        OUTPUTDIR + \"/log/\" + \"ancombc.log\"\n    shell:\n        \"\"\"\n        Rscript ./scripts/diff_test_ancombc.R -p {input.phyloseq} \\\n          -t {TARGET} -g {TARGET_GROUPS} \\\n          -f {ANCOM_FORMULA} \\\n          -c {REFERENCE} \\\n          -o {OUTPUTDIR} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre>"},{"location":"workflow/ancom_bc/#references","title":"References","text":"<ol> <li>Lin, H., &amp; Peddada, S. D. (2020). Analysis of compositions of microbiomes with bias correction. Nature Communications, 11(1), 3514. https://doi.org/10.1038/s41467-020-17041-7</li> </ol>"},{"location":"workflow/config/","title":"Configuration file","text":"<p>All configuration information are stored in a seperate file <code>config.yaml</code>. This management of project-related data in a seperate file allows a greater reusability for the pipeline. </p> <p>The following table provides explanation for the configuration used in the pipeline.</p> Key Description project Name of the project. inputDIR Path to the input directory containing results from upstream analysis pipeline. The pipeline expects needed files in two subdirectories: <code>asv</code> and <code>tree</code>. This structure is generated by our upstream pipeline when processing raw sequence data. More details can be found here. outputDIR Directory where the results will be stored. metadata Path to the metadata file (TSV format) containing sample information. taxonomy Path to the taxonomy file (TSV format) corresponding to ASV sequences. otu Path to the ASV table file (TSV format). target The target attribute for grouping samples in analysis (e.g., disease status). target_groups List of groups present in the target attribute (e.g., normal, adenoma, carcinoma). colors Colors corresponding to target groups for visualization purposes (green, blue, red). The number of entries must be the same as the number of entries in <code>target_groups</code>. alpha-measures Alpha diversity metrics to compute and plot. The pipeline supports the following measures: Shannon, Chao1, Simpson, InvSimpson, Fisher, ACE. Multiple values can be specified following <code>yaml</code> syntax. top-n Number of top genera, families, or phyla to extract based on abundance. rank Taxonomic rank (e.g., Genus) used for differential abundance testing in DESeq2. minimum Minimum abundance threshold for filtering features before analysis. formula Formula used in DESeq2 for differential abundance testing (e.g., <code>~disease_stat</code>). reference Reference group in DESeq2 for comparison (e.g., normal). ancom_formula Formula used in ANCOM-BC for differential abundance testing (e.g., <code>disease_stat</code>). agg_rank Taxonomic rank used for aggregating features in machine learning analysis (e.g., genus). index_col Name of the column in metadata containing sample-id. This information is used while merging metadata and aggregated otu data. target_group Specific target group used for classification in machine learning models (e.g., carcinoma)."},{"location":"workflow/config/#example-configyaml","title":"Example config.yaml","text":"<p>The below is an example of <code>config.yaml</code>. <pre><code>## Basic setup\nproject: trial\ninputDIR: .\noutputDIR: ./results\nmetadata: ./metadata.tsv\ntaxonomy: ./asv/taxonomy.tsv\notu: ./asv/trial-asv-table.tsv\n\n## Alpha diversity measures plotting\ntarget: disease_stat\ntarget_groups: # Groups in target attribute\n  - normal\n  - adenoma\n  - carcinoma\ncolors:  # color for target groups\n  - green\n  - blue\n  - red\nalpha-measures: #Alpha measures to plot\n  - Shannon\n  - Chao1\n  - Simpson\n  - InvSimpson\ntop-n: 5 # Number of genus, family or phylum to extract based on their abundance\n\n## Differential abundance testing config DESEq2\nrank: Genus\nminimum: 10 # for pruning purposes\nformula: ~disease_stat\nreference: normal # this group is used as a reference to compare with \n\n## Differential abundance testing config ANCOM-BC\nancom_formula: disease_stat\n\n## Machine learning model config\nagg_rank: genus\nindex_col: sample-id\ntarget_group: carcinoma\n</code></pre></p>"},{"location":"workflow/deseq2/","title":"DESeq2","text":"<p>DESeq2 is a powerful statistical tool designed for differential expression analysis, primarily used to evaluate the significance of differences in count-based data, such as RNA sequencing or microbial abundance datasets, between two or more target groups (Love et al., 2014). Unlike traditional parametric methods, DESeq2 employs a negative binomial distribution to model variance, making it particularly well-suited for handling the overdispersion and sparsity often observed in high-throughput sequencing data.</p> <p><pre><code>##########################################################\n#          PERFORM DIFFERENTIAL ABUNDANCE ANALYSIS USING DESEQ2\n##########################################################\nrule diff_deseq2:\n    input:\n        phyloseq = OUTPUTDIR + \"/\" + PROJ + \"-phyloseq.RDS\",\n    output:\n        *output_files,\n        deseq2_taxa = OUTPUTDIR + \"/\" + RANK + \"-taxa.csv\",\n    log:\n        OUTPUTDIR + \"/log/\" + \"deseq2.log\"\n    shell:\n        \"\"\"\n        Rscript ./scripts/diff_test.R -p {input.phyloseq} \\\n          -t {TARGET} -g {TARGET_GROUPS} \\\n          -m {MIN} \\\n          -r {RANK} \\\n          -f {FORMULA} \\\n          -c {REFERENCE} \\\n          -o {OUTPUTDIR} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n\n##########################################################\n#          PLOT DESEQ2 results\n##########################################################\nrule plot_deseq2:\n    input:\n        taxa = OUTPUTDIR + \"/\" + RANK + \"-taxa.csv\",\n        output_files = output_files,\n    output:\n        plot_files\n    log:\n        OUTPUTDIR + \"/log/\" + \"deseq2.log\"\n    shell:\n        \"\"\"\n        Rscript ./scripts/plot_deseq2.R -f {input.output_files} \\\n          -r {REFERENCE} -t {TARGET_GROUPS} \\\n          -x {input.taxa} \\\n          -o {OUTPUTDIR} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre> The figures below show Genus level microbiome which were found significantly different between target groups. </p> <p> </p>"},{"location":"workflow/deseq2/#references","title":"References","text":"<ol> <li>Love MI, Huber W, Anders S (2014). \u201cModerated estimation of fold change and dispersion for RNA-seq data with DESeq2.\u201d Genome Biology, 15, 550. doi:10.1186/s13059-014-0550-8. </li> </ol>"},{"location":"workflow/diff/","title":"Differential abundance","text":"<p>This step offers insights into differences in abundances of microbial communities among different target groups. This knowledge facilitates identification and selection of specific microbial species for subsequence analysis. This results in a significant reduction in the number of features, simplifying the later analysis. </p> <p>There are various methods to perform this testing such as Wilcoxon t-test, DESeq2, and ANCOM-BC. These methods are found to produce inconsistent results in prior research (Nearing et al., 2022). Therefore, this step, instead of opting a single method, employs multiple methods for differential testing, and identify core features based on consensus among results of different methods.</p> <p>The pipeline performs three different differential analysis methods.</p> <ol> <li>Wilcoxon test </li> <li>DESeq2 </li> <li>ANCOM-BC</li> </ol>"},{"location":"workflow/diff/#references","title":"References","text":"<ol> <li>Nearing, J. T., Douglas, G. M., Hayes, M. G., MacDonald, J., Desai, D. K., Allward, N., Jones, C. M. A., Wright, R. J., Dhanani, A. S., Comeau, A. M., &amp; Langille, M. G. I. (2022). Microbiome differential abundance methods produce different results across 38 datasets. Nature Communications, 13(1), 342. https://doi.org/10.1038/s41467-022-28034-z</li> </ol>"},{"location":"workflow/load_config/","title":"Loading configuration data in the workflow","text":"<p>This is the first step in our downstream analysis workflow. We will import our configuration file and extract project-related information. </p> <p>We simply specify our config file in a <code>key:value</code> format with key as <code>config.yaml</code>. Snakemake takes care of loading the file and extraction of all configuration in a <code>config</code> dictionary. </p> <pre><code>import io\nimport os\nimport pandas as pd\nimport pathlib\n\nconfigfile: \"config_downstream.yaml\"\n\n##########################################################\n#                 SET CONFIG VARS\n##########################################################\n\nPROJ = config[\"project\"]\nSCRATCH = config[\"scratch\"]\nOUTPUTDIR = config['outputDIR']\nMETADATA = config[\"metadata\"]\nREPORTDIR = config['reportDIR']\n\nTARGET = config['target']\nTARGET_GROUPS = config['target_groups']\nCOLORS = config['colors']\nALPHA = config['alpha-measures']\n\nN = config['top-n']\n</code></pre>"},{"location":"workflow/m_pipe_intro/","title":"Snakemake workflow","text":"<p>This section provides a brief overview of our downstream pipeline. The pipeline has been built using the Snakemake workflow manager. Snakemake enables the automated execution of multiple steps integrated into the pipeline in a seamless manner. The figure below shows the steps integrated in the pipeline.</p> <pre><code>graph TD;\n    step-1(\"Qiime2 Artifacts to Phyloseq Object\") --&gt; step-2(\"Compute &amp; Plot Alpha Diversity\");\n    step-2 --&gt; step-3(\"Identify &amp; Plot Top-N Abundant Taxa (Genus, Family, Phylum)\");\n    step-3 --&gt; step-4(\"Perform differential analysis (DESeq2, Wilcoxon)\");\n    step-4 --&gt; step-5(\"Plot key microbial taxa\");\n    step-5 --&gt; step-6(\"Build a classifier using LASSO\");\n    step-6 --&gt; step-7(\"Plot AUC plot\");\n</code></pre> <p>For our workflow, we use a single configuration file to specify the information needed during the pipeline's execution. We will delve deeper into the configuration file in the next chapter.  </p>"},{"location":"workflow/ml-model/","title":"Prediction performance","text":"<p>This step builds a simple linear machine learning model using LASSO (Least Absolute Shrinkage and Selection Operator). The LASSO model reduces the feature space by zeroing their coefficient. Therefore, it also presents an effective method for feature selection for better interpretation and understanding.</p> <p>Note</p> <p>The produced model is not a final model. Rather, it provides initial insights into features' predictive power. Additionally, the performance obtained can be treated as a baseline for further machine learning analysis.</p> <p><pre><code>##########################################################\n#          PERFORM DIFFERENTIAL ABUNDANCE ANALYSIS USING ANCOM-BC\n##########################################################\nrule diff_ancom:\n    input:\n        phyloseq = OUTPUTDIR + \"/\" + PROJ + \"-phyloseq.RDS\",\n    output:\n        *ancom_output_files,\n    log:\n        OUTPUTDIR + \"/log/\" + \"ancombc.log\"\n    shell:\n        \"\"\"\n        Rscript ./scripts/diff_test_ancombc.R -p {input.phyloseq} \\\n          -t {TARGET} -g {TARGET_GROUPS} \\\n          -f {ANCOM_FORMULA} \\\n          -c {REFERENCE} \\\n          -o {OUTPUTDIR} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre> The figures below show AUC (Area Under the ROC) measure for LASSO model. The dataset for the training divided into training and test set using 70/30 split. The training set is used for building the model using 5-fold cross validation. The resultant model then tested with test set.  </p> <p></p>"},{"location":"workflow/report/","title":"Html Report","text":"<p>This step generates a report consisting of key insights into the dataset. The report includes various plots which are generated by previous steps in the pipeline such as most abundance top-5 families, differential abundance anlaysis results, etc. </p> <p>The Snakemake rule which generates the report is given below.</p> <pre><code>##########################################################\n#          GENERATE A HTML REPORT\n##########################################################\nrule generate_report:\n    input:\n        # Alpha diversity plots\n        alpha_plot = OUTPUTDIR + \"/plot/\" + PROJ + \"-alpha-diversity-plot.png\",\n\n        # Top genus\n        top_genus = OUTPUTDIR + \"/plot/\" + PROJ + \"-top-\" + str(N) + \"-genus.png\",\n\n        # ML step\n        report_file = OUTPUTDIR + '/'+ PROJ + '-ml-report.json',\n        plot_file = OUTPUTDIR + '/plot/' + PROJ + '-ml-auc.png',\n\n    output:\n        html_file = OUTPUTDIR + '/../'+ PROJ + '-html-report.html',\n\n    params:\n        *plot_files\n\n    log:\n        OUTPUTDIR + \"/log/\" + \"generate_report.log\"\n\n    shell:\n        \"\"\"\n        Python ./scripts/generate_report.py \\\n        --alpha_plot \"{input.alpha_plot}\" \\\n        --top_taxa_plot \"{input.top_genus}\" \\\n        --auc_plot \"{input.plot_file}\" \\\n        --auc_report \"{input.report_file}\" \\\n        --diff_deseq2_plots {params} \\\n        --output \"{output.html_file}\"\n        \"\"\"\n</code></pre> <p></p>"},{"location":"workflow/to_physeq/","title":"Qiime2 artifacts into Phyloseq object","text":"<p>This is the first step in the <code>M-Pipe</code> which converts Qiime2 artifact produced by upstream analysis into a <code>phyloseq</code> object for subsequent processing. Phyloseq object is a particular way of storing abundance data along with taxonomy and metadata. </p> <p>The  <code>Phyloseq</code> R package provides the specification of this Phyloseq class and provides several useful functionalities for processing and visualization. Additionally, there are other R packages which provides an interface for the same object. Therefore, this step facilitates utilization of those packages for analysis purposes.</p> <pre><code>##########################################################\n#           CREATE PHYLOSEQ OBJECT\n##########################################################\nrule create_phyloseq:\n    input:\n        table = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" + PROJ + \"-asv-table.qza\",\n        tree = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" + \"tree/\" + PROJ + \"-rooted-tree.qza\",\n        taxa = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" +  PROJ + \"-tax_sklearn.qza\",\n\n    output:\n        phyloseq = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-phyloseq.RDS\"\n\n    log:\n        SCRATCH + \"/\" + OUTPUTDIR + \"/report/log/\" + \"create_phyloseq.log\"\n\n    shell:\n        \"\"\"\n        Rscript --no-save --no-restore --verbose ./scripts/to_physeq.R -f {input.table} \\\n          -t {input.tree} -x {input.taxa} \\\n          -m {METADATA} -o {output.phyloseq} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre>"},{"location":"workflow/top_n/","title":"Plot top-N abundant genera, families and phylums","text":"<p>This step extract top abundant taxa based on genus, family and phylum, and generate a plot. To achieve this goal, we utilize <code>microbiomeutilities</code> package. </p> <p>A statistical test, comparing taxa abundance among target groups, is also performed and results are added to the plot.</p> <pre><code>##########################################################\n#          GENERATE TOP-5 GENUS, FAMILIES, PHYLUMS\n##########################################################\nrule create_top_taxa:\n    input:\n        phyloseq = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-phyloseq.RDS\",\n    output:\n        top_genus = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-top-\" + str(N) + \"-genus.pdf\",\n        #top_family = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-top-\" + N + \"-families.pdf\",\n        #top_phylum = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-top-\" + N + \"-phylums.pdf\"\n\n    log:\n        SCRATCH + \"/\" + OUTPUTDIR + \"/report/log/\" + \"create_top_taxa.log\"\n\n    shell:\n        \"\"\"\n        Rscript --no-save --no-restore --verbose ./scripts/plot_topn.R -p {input.phyloseq} \\\n          -t {TARGET} -g {TARGET_GROUPS} -c {COLORS}\\\n          -n {N} \\\n          -o {output.top_genus} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre>"},{"location":"workflow/top_n/#example-plot","title":"Example plot","text":"<p>The below figure illustrates Top-5 most abundant microbial families in the dataset. </p>"},{"location":"workflow/wilcox/","title":"Wilcoxon test","text":"<p>Wilcoxon test is a non-parametric test to check significance of differences between target groups. This step allows to identify key microbial taxa for subsequent analysis or plotting purposes. By highlighting these critical taxa, the Wilcoxon test serves as a foundational step in exploratory data analysis, guiding further investigation into the underlying biological or ecological factors driving the observed patterns.</p> <pre><code>##########################################################\n#          PERFORM WILCOXON RANK SUM TEST\n##########################################################\n\nrule diff_wilcoxon:\n    input:\n        phyloseq = OUTPUTDIR + \"/\" + PROJ + \"-phyloseq.RDS\",\n    output:\n        wil_output_files\n    log:\n        OUTPUTDIR + \"/log/\" + \"wilcoxon.log\"\n    shell:\n        \"\"\"\n        Rscript ./scripts/diff_test_wilcoxon.R -p {input.phyloseq} \\\n          -t {TARGET} -g {TARGET_GROUPS} \\\n          -m {MIN} \\\n          -r {RANK} \\\n          -c {REFERENCE} \\\n          -o {OUTPUTDIR} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre>"}]}