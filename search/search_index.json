{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"M-Pipe: Automated report generation from relative abundance data","text":"<p>M-Pipe is a Snakemake workflow designed to automate exploratory analysis of relative abundance data obtained from 16S amplicon sequences. It complements our 16S processing workflow, which automates the processing of raw sequences. More details can be found here.  </p> <p>M-Pipe takes Qiime2 artifacts as input, ensuring seamless integration with pipelines utilizing Qiime2. It generates an HTML report containing key insights into the microbial species present in the samples.  </p> <p>The report provides: - An overview of the main microbial species in the samples and their compositional characteristics. - Associations between the target attribute (e.g., CRC) and host characteristics. - Differential abundance analysis and statistical comparisons among target groups. - Performance evaluation of a logistic regression model for predicting the target attribute.  </p>"},{"location":"dataset/","title":"16S Amplicon Sequence Reads","text":"<p>For this tutorial, we use 16S amplicon read sequences obtained from faecal sample from three patient groups:Healthy,Adenoma,CRC (Zackular et al., 2014). The authors investigated gut microbiome potential for predicting cases with colorectal cancer. They used 16S amplicon sequences for the analysis. You can read more about the study here. </p>"},{"location":"dataset/#data-files","title":"Data files","text":"<p>You can download the 16S amplicon sequence reads and metadata file from the following links.</p> <ul> <li>Raw Fastq Paired Reads</li> <li>Metadata</li> </ul>"},{"location":"dataset/#references","title":"References","text":"<ol> <li>Zackular, J. P., Rogers, M. A., Ruffin IV, M. T., &amp; Schloss, P. D. (2014). The human gut microbiome as a screening tool for colorectal cancer. Cancer prevention research, 7(11), 1112-1121.</li> </ol>"},{"location":"execution/","title":"Execution","text":"<p>This section guides you through running the workflow to generate useful visualization and a summary report using qiime2 artifacts from our upstream pipeline.</p>"},{"location":"execution/#clone-the-repository","title":"Clone the repository","text":"<p>Clone the GitHub repository to access the scripts and configuration files needed for the workflow: <pre><code>git clone https://github.com/pankajchejara23/M-pipe\n</code></pre></p>"},{"location":"execution/#create-processing-environment","title":"Create processing environment","text":"<p>Set up the required Conda environment using the environment file: <pre><code>conda env create -f environment.yml\nconda activate downstream_env\n</code></pre></p>"},{"location":"execution/#configure-snakemake-workflow","title":"Configure Snakemake workflow","text":"<p>The <code>config.yaml</code> file is preconfigured for this workflow. If needed, edit the file to customize parameters for your specific use case.</p>"},{"location":"execution/#execute","title":"Execute","text":"<p>Run the Snakemake workflow using the following command: <pre><code>Snakemake --cores 4 \n</code></pre></p>"},{"location":"setup/","title":"Setup","text":"<p>We start by setting up our machine with required tools and packages to get it ready for executing the workflow. We primarily need the following tools</p> <ul> <li>R</li> <li>Python</li> <li>Miniconda</li> <li>Snakemake</li> </ul> <p>To speed up the installation, we will use an <code>environment.yml</code> file exported from a conda environment that successfully executed the workflow. You can download the file from environment. </p> <p>You can create a new environment using the following command. </p> <pre><code>conda env create -f environment.yml\n</code></pre> <p>Note</p> <p>To execute this command you need to have either Miniconda or Anaconda installed on your system. </p>"},{"location":"workflow/alpha_plot/","title":"Alpha diversity plot","text":"<p>This step computes and generates a plot for various alpha diversity measures (depending on the configuration). The plot visualizes alpha diversity measures for each group present in the target attribute. </p> <p>A statistical test, comparing alpha diversity among target groups, is also performed and results are added to the plot.</p> <pre><code>##########################################################\n#           CREATE PHYLOSEQ OBJECT\n##########################################################\nrule create_phyloseq:\n    input:\n        table = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" + PROJ + \"-asv-table.qza\",\n        tree = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" + \"tree/\" + PROJ + \"-rooted-tree.qza\",\n        taxa = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" +  PROJ + \"-tax_sklearn.qza\",\n\n    output:\n        phyloseq = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-phyloseq.RDS\"\n\n    log:\n        SCRATCH + \"/\" + OUTPUTDIR + \"/report/log/\" + \"create_phyloseq.log\"\n\n    shell:\n        \"\"\"\n        Rscript --no-save --no-restore --verbose ./scripts/to_physeq.R -f {input.table} \\\n          -t {input.tree} -x {input.taxa} \\\n          -m {METADATA} -o {output.phyloseq} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre>"},{"location":"workflow/alpha_plot/#example-plot","title":"Example plot","text":"<p>This is an example of alpha plot generated for this step. We used here processed data from (Zackular et al., 2014).</p> <p></p>"},{"location":"workflow/alpha_plot/#references","title":"References","text":"<ol> <li>Zackular, J. P., Rogers, M. A., Ruffin IV, M. T., &amp; Schloss, P. D. (2014). The human gut microbiome as a screening tool for colorectal cancer. Cancer prevention research, 7(11), 1112-1121.</li> </ol>"},{"location":"workflow/config/","title":"Configuration file","text":"<p>All configuration information are stored in a seperate file <code>config.yaml</code>. This management of project-related data in a seperate file allows a greater reusability for the pipeline. </p> <p>The following table provides explanation for the configuration used in the pipeline.</p> Key Description scratch Path to the working directory for the workflow. outputDIR Directory where the Qiime2 output results are stored. The pipeline expects needed files in two subdirectories: <code>asv</code> and <code>tree</code>. This structure is generated by our upstream pipeline when processing raw sequence data. More details can be found here. metadata Path to the metadata file (TSV format) containing sample information. reportDIR Directory where reports are generated and stored. target The target attribute for grouping samples in analysis (e.g., disease status). target_groups List of groups present in the target attribute (e.g., normal, adenoma, carcinoma). colors Colors corresponding to target groups for visualization purposes (green, blue, red). The number of entries must be the same as the number of entries in target_groups. alpha-measures Alpha diversity metrics to compute and plot. The pipeline supports the following measures: Shannon, Chao1, Simpson, InvSimpson, Fisher, ACE. Multiple values can be specified following <code>yaml</code> syntax. top-n Number of top genera, families, or phyla to extract based on abundance."},{"location":"workflow/config/#example-configyaml","title":"Example config.yaml","text":"<p>The below is an example of <code>config.yaml</code>. <pre><code>## Basic setup\nproject: trial\nscratch: /Users/pankaj/Documents/Metrosert/16S-workflow\noutputDIR: results\nmetadata: metadata.tsv\nreportDIR: report\n\n## Alpha diversity measures plotting\ntarget: disease_stat\ntarget_groups: # Groups in target attribute\n  - normal\n  - adenoma\n  - carcinoma\ncolors:  # color for target groups\n  - green\n  - blue\n  - red\nalpha-measures: #Alpha measures to plot\n  - Shannon\n  - Chao1\n\ntop-n: 5 # Number of genus, family or phylum to extract based on their abundance\n</code></pre></p>"},{"location":"workflow/load_config/","title":"Loading configuration data in the workflow","text":"<p>This is the first step in our downstream analysis workflow. We will import our configuration file and extract project-related information. </p> <p>We simply specify our config file in a <code>key:value</code> format with key as <code>config.yaml</code>. Snakemake takes care of loading the file and extraction of all configuration in a <code>config</code> dictionary. </p> <pre><code>import io\nimport os\nimport pandas as pd\nimport pathlib\n\nconfigfile: \"config_downstream.yaml\"\n\n##########################################################\n#                 SET CONFIG VARS\n##########################################################\n\nPROJ = config[\"project\"]\nSCRATCH = config[\"scratch\"]\nOUTPUTDIR = config['outputDIR']\nMETADATA = config[\"metadata\"]\nREPORTDIR = config['reportDIR']\n\nTARGET = config['target']\nTARGET_GROUPS = config['target_groups']\nCOLORS = config['colors']\nALPHA = config['alpha-measures']\n\nN = config['top-n']\n</code></pre>"},{"location":"workflow/m_pipe_intro/","title":"Snakemake workflow","text":"<p>This section provides a brief overview of our downstream pipeline. The pipeline has been built using the Snakemake workflow manager. Snakemake enables the automated execution of multiple steps integrated into the pipeline in a seamless manner. The figure below shows the steps integrated in the pipeline.</p> <p><pre><code>graph TD;\n    step-1(\"Qiime2 Artifacts to Phyloseq Object\") --&gt; step-2(\"Compute &amp; Plot Alpha Diversity\");\n    step-1(\"Qiime2 Artifacts to Phyloseq Object\") --&gt; step-3(\"Identify &amp; Plot Top-N Abundant Taxa (Genus, Family, Phylum)\");\n    step-2 --&gt; step-4[\"Generate Final Report\"];\n    step-3 --&gt; step-4[\"Generate Final Report\"];\n</code></pre> For our workflow, we use a single configuration file to specify the information needed during the pipeline's execution. We will delve deeper into the configuration file in the next chapter.  </p>"},{"location":"workflow/to_physeq/","title":"Qiime2 artifacts into Phyloseq object","text":"<p>This is the first step in the <code>M-Pipe</code> which converts Qiime2 artifact produced by upstream analysis into a <code>phyloseq</code> object for subsequent processing. Phyloseq object is a particular way of storing abundance data along with taxonomy and metadata. </p> <p>The  <code>Phyloseq</code> R package provides the specification of this Phyloseq class and provides several useful functionalities for processing and visualization. Additionally, there are other R packages which provides an interface for the same object. Therefore, this step facilitates utilization of those packages for analysis purposes.</p> <pre><code>##########################################################\n#           CREATE PHYLOSEQ OBJECT\n##########################################################\nrule create_phyloseq:\n    input:\n        table = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" + PROJ + \"-asv-table.qza\",\n        tree = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" + \"tree/\" + PROJ + \"-rooted-tree.qza\",\n        taxa = SCRATCH + \"/\" + OUTPUTDIR + \"/asv/\" +  PROJ + \"-tax_sklearn.qza\",\n\n    output:\n        phyloseq = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-phyloseq.RDS\"\n\n    log:\n        SCRATCH + \"/\" + OUTPUTDIR + \"/report/log/\" + \"create_phyloseq.log\"\n\n    shell:\n        \"\"\"\n        Rscript --no-save --no-restore --verbose ./scripts/to_physeq.R -f {input.table} \\\n          -t {input.tree} -x {input.taxa} \\\n          -m {METADATA} -o {output.phyloseq} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre>"},{"location":"workflow/top_n/","title":"Plot top-N abundant genera, families and phylums","text":"<p>This step extract top abundant taxa based on genus, family and phylum, and generate a plot. To achieve this goal, we utilize <code>microbiomeutilities</code> package. </p> <p>A statistical test, comparing taxa abundance among target groups, is also performed and results are added to the plot.</p> <pre><code>##########################################################\n#          GENERATE TOP-5 GENUS, FAMILIES, PHYLUMS\n##########################################################\nrule create_top_taxa:\n    input:\n        phyloseq = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-phyloseq.RDS\",\n    output:\n        top_genus = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-top-\" + str(N) + \"-genus.pdf\",\n        #top_family = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-top-\" + N + \"-families.pdf\",\n        #top_phylum = SCRATCH + \"/\" + REPORTDIR + \"/\" + PROJ + \"-top-\" + N + \"-phylums.pdf\"\n\n    log:\n        SCRATCH + \"/\" + OUTPUTDIR + \"/report/log/\" + \"create_top_taxa.log\"\n\n    shell:\n        \"\"\"\n        Rscript --no-save --no-restore --verbose ./scripts/plot_topn.R -p {input.phyloseq} \\\n          -t {TARGET} -g {TARGET_GROUPS} -c {COLORS}\\\n          -n {N} \\\n          -o {output.top_genus} &gt; {log} 2&gt;&amp;1\n        \"\"\"\n</code></pre>"},{"location":"workflow/top_n/#example-plot","title":"Example plot","text":"<p>The below figure illustrates Top-5 most abundant microbial families in the dataset. </p>"}]}